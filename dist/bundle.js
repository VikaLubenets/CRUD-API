(()=>{"use strict";var e={n:n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},d:(n,t)=>{for(var i in t)e.o(t,i)&&!e.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:t[i]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n)};const n=require("node:http"),t=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i,i=function(e){return"string"==typeof e&&t.test(e)},r=require("node:crypto");var o=e.n(r);const s={randomUUID:o().randomUUID},a=new Uint8Array(256);let d=a.length;function u(){return d>a.length-16&&(o().randomFillSync(a),d=0),a.slice(d,d+=16)}const f=[];for(let e=0;e<256;++e)f.push((e+256).toString(16).slice(1));const c=function(e,n,t){if(s.randomUUID&&!n&&!e)return s.randomUUID();const i=(e=e||{}).random||(e.rng||u)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=i[e];return n}return function(e,n=0){return(f[e[n+0]]+f[e[n+1]]+f[e[n+2]]+f[e[n+3]]+"-"+f[e[n+4]]+f[e[n+5]]+"-"+f[e[n+6]]+f[e[n+7]]+"-"+f[e[n+8]]+f[e[n+9]]+"-"+f[e[n+10]]+f[e[n+11]]+f[e[n+12]]+f[e[n+13]]+f[e[n+14]]+f[e[n+15]]).toLowerCase()}(i)};function p(e){const n=Object.keys({username:"",age:0,hobbies:[]});for(let t of Object.keys(e)){if(!n.includes(t))return!1;if("username"===t&&"string"!=typeof e[t])return!1;if("age"===t){const n=parseInt(e[t]);if(Number.isNaN(n)||!Number.isInteger(n)||n<0)return!1}if("hobbies"===t&&!Array.isArray(e[t]))return!1}return!0}function l(e,n){if("users"===e.query.pathname.split("/")[2]){const t=e.body;if(!function(e){const n=Object.keys({username:"",age:0,hobbies:[]}),t=Object.keys(e);return n.length===t.length&&p(e)}(t))return n.writeHead(400,{"Content-Type":"text/plain"}),void n.end("Body does not contain required fields or they have invalid values");{const i=function(e,n){const t={...n,id:c()};return e.users.push(t),t}(e,t);n.writeHead(201,{"Content-Type":"application/json"}),n.write(JSON.stringify(i)),n.end()}}else n.writeHead(404,{"Content-Type":"text/plain"}),n.end("Route not found")}function y(e,n){const t=e.query.pathname.split("/");if("users"===t[2]){const r=t[3];if(!i(r))return n.writeHead(400,{"Content-Type":"text/plain"}),void n.end("userId is invalid");const o=e.users.findIndex((e=>e.id===r));if(-1!==o)if(p(e.body)){const t=function(e,n){const t=e.body;return e.users[n]={...e.users[n],...t},e.users[n]}(e,o);n.writeHead(200,{"Content-Type":"application/json"}),n.write(JSON.stringify(t)),n.end()}else n.writeHead(400,{"Content-Type":"text/plain"}),n.end("Body does not contain required fields or they have invalid values");else n.writeHead(404,{"Content-Type":"text/plain"}),n.end("record with id === userId doesn't exist")}else n.writeHead(404,{"Content-Type":"text/plain"}),n.end("Route not found")}const b=[{id:"1",username:"Frank",age:53,hobbies:["dancing","cycling"]},{id:"2",username:"Alice",age:35,hobbies:[]},{id:"3",username:"Frank",age:57,hobbies:["swimming"]},{id:"4",username:"Grace",age:35,hobbies:["photography","painting","coding"]},{id:"5",username:"Grace",age:46,hobbies:[]},{id:"6",username:"Hank",age:29,hobbies:[]},{id:"7",username:"Alice",age:42,hobbies:["painting"]},{id:"8",username:"Jack",age:34,hobbies:[]},{id:"9",username:"Ivy",age:59,hobbies:[]},{id:"10",username:"Grace",age:37,hobbies:["coding","photography"]}].map((e=>({...e,id:c()})));function h(e,n,t){let i=[];e.on("data",(e=>{i.push(e)})),e.on("end",(()=>{e.body=Buffer.concat(i).toString(),"application/json"===e.headers["content-type"]&&(e.body=JSON.parse(e.body)),t(e,n)}))}const g=process.env.PORT??3e3;n.createServer(((e,n)=>{try{switch(e.users=b,e.query=new URL(e.url,`http://${e.headers.host}`),e.method){case"GET":!function(e,n){const t=e.query.pathname.split("/");if("users"===t[2]){const r=t[3];if(r){if(!i(r))return n.writeHead(400,{"Content-Type":"text/plain"}),void n.end("userId is invalid");const t=e.users.find((e=>e.id===r));t?(n.writeHead(200,{"Content-Type":"application/json"}),n.end(JSON.stringify(t))):(n.writeHead(404,{"Content-Type":"text/plain"}),n.end("record with id === userId doesn't exist"))}else n.writeHead(200,{"Content-Type":"application/json"}),n.end(JSON.stringify(e.users))}else n.writeHead(404,{"Content-Type":"text/plain"}),n.end("Route not found")}(e,n);break;case"POST":h(e,n,l);break;case"PUT":h(e,n,y);break;case"DELETE":!function(e,n){const t=e.query.pathname.split("/");if("users"===t[2]){const r=t[3];if(r){if(!i(r))return n.writeHead(400,{"Content-Type":"text/plain"}),void n.end("userId is invalid");const t=e.users.findIndex((e=>e.id===r));-1!==t?(function(e,n){e.users.splice(n,1)}(e,t),n.writeHead(204),n.end()):(n.writeHead(404,{"Content-Type":"text/plain"}),n.end("record with id === userId doesn't exist"))}else n.writeHead(400,{"Content-Type":"text/plain"}),n.end("userId is not provided in the path")}else n.writeHead(404,{"Content-Type":"text/plain"}),n.end("Route not found")}(e,n);break;default:n.writeHead(500,{"Content-Type":"text/plain"}),n.end("Intenal server error")}}catch(e){!function(e,n){console.log(e),n.writeHead(500,{"Content-Type":"application/json"}),n.write(JSON.stringify({message:"Internal server error"})),n.end()}(e,n)}})).listen(g,(()=>{console.log(`Server is listening on ${g} port`)}))})();